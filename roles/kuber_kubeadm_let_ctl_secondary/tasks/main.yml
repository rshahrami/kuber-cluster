---
# tasks file for kuber_kubeadm_let_ctl_secondary


- name: "Check if path exists"
  stat:
    path: "{{ FILE_DIR }}cni-plugins-linux-{{ ARCH }}-{{ CNI_VERSION }}.tgz"
  register: result
  delegate_to: localhost
  run_once: true

- name: get cni in local machine
  uri:
    url: https://github.com/containernetworking/plugins/releases/download/{{ CNI_VERSION }}/cni-plugins-linux-{{ ARCH }}-{{ CNI_VERSION }}.tgz
    dest : "{{ FILE_DIR }}cni-plugins-linux-{{ ARCH }}-{{ CNI_VERSION }}.tgz"
    remote_src: yes 
  delegate_to: localhost
  run_once: true
  when: not result.stat.exists


- name: "Check if path exists"
  stat:
    path: "{{ FILE_DIR }}crictl-{{ CRICTL_VERSION }}-linux-{{ ARCH }}.tar.gz"
  register: result
  delegate_to: localhost
  run_once: true


- name: get crictl in local machine
  uri:
    url: https://github.com/kubernetes-sigs/cri-tools/releases/download/{{ CRICTL_VERSION }}/crictl-{{ CRICTL_VERSION }}-linux-{{ ARCH }}.tar.gz
    dest : "{{ FILE_DIR }}crictl-{{ CRICTL_VERSION }}-linux-{{ ARCH }}.tar.gz"
    remote_src: yes 
  delegate_to: localhost
  run_once: true
  when: not result.stat.exists


- name: "Check if path exists"
  stat:
    path: "{{ FILE_DIR }}kubelet.service"
  register: result
  delegate_to: localhost
  run_once: true


- name: get kubelet.service in local machine
  uri:
    url: https://raw.githubusercontent.com/kubernetes/release/{{ RELEASE_VERSION }}/cmd/kubepkg/templates/latest/deb/kubelet/lib/systemd/system/kubelet.service
    dest : "{{ FILE_DIR }}kubelet.service"
    remote_src: yes 
  delegate_to: localhost
  run_once: true
  when: not result.stat.exists

- name: "Check if path exists"
  stat:
    path: "{{ FILE_DIR }}10-kubeadm.conf"
  register: result
  delegate_to: localhost
  run_once: true


- name: get kubeadm.conf in local machine
  uri:
    url: https://raw.githubusercontent.com/kubernetes/release/{{ RELEASE_VERSION }}/cmd/kubepkg/templates/latest/deb/kubeadm/10-kubeadm.conf
    dest : "{{ FILE_DIR }}10-kubeadm.conf"
    remote_src: yes 
  delegate_to: localhost
  run_once: true
  when: not result.stat.exists


- name: Create a directory - java directory
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ CNI_DIR }}"
    - "{{ DOWNLOAD_DIR }}"
    - /etc/systemd/system
    - /etc/systemd/system/kubelet.service.d


- name: copy kubeadm, kubectl and kubelet to remote machine
  copy:
    src: "{{ item.name_src }}"
    dest: "{{ item.name_dest }}"
  with_items:
    - { name_src: '{{ FILE_DIR }}/kubelet.service', name_dest: '/etc/systemd/system/kubelet.service' }
    - { name_src: '{{ FILE_DIR }}/10-kubeadm.conf', name_dest: '/etc/systemd/system/kubelet.service.d/10-kubeadm.conf' }


- name: cahnge setting of kubelet service and kubeadm config
  replace:
    path: "{{ item.name_path }}"
    regexp: "{{ item.name_regex }}"
    replace: "{{ item.name_place}}"
  with_items:
    - { name_regex: '/usr/bin', name_place: '{{ DOWNLOAD_DIR }}', name_path: '{{ SERVICE_DIR }}kubelet.service' }
    - { name_regex: '/usr/bin', name_place: '{{ DOWNLOAD_DIR }}', name_path: '{{ SERVICE_DIR }}kubelet.service.d/10-kubeadm.conf' }


- name: Unarchive a cni file that is already on the remote machine
  unarchive:
    src: "{{ FILE_DIR }}cni-plugins-linux-{{ ARCH }}-{{ CNI_VERSION }}.tgz"
    dest: "{{ CNI_DIR }}"
    remote_src: no


- name: Unarchive a crictl file that is already on the remote machine
  unarchive:
    src: "{{ FILE_DIR }}crictl-{{ CRICTL_VERSION }}-linux-{{ ARCH }}.tar.gz"
    dest: "{{ DOWNLOAD_DIR }}"
    remote_src: no


- name: copy kubeadm, kubectl and kubelet to remote machine
  copy:
    src: "{{ FILE_DIR }}/{{ item }}"
    dest: "{{ DOWNLOAD_DIR }}/{{ item }}"
    mode: +x
  with_items:
    - kubeadm
    - kubelet
    - kubectl


- name: restart kubelet
  service:
    name: kubelet
    state: started
    enabled: yes







